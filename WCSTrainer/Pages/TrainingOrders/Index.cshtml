@page
@using Microsoft.AspNetCore.Identity
@model WCSTrainer.Pages.TrainingOrders.IndexModel

@{
    ViewData["Title"] = "Index";
}

<section class="modal hidden">
    <div class="one">
        <button class="btn-close btn btnRed">⨉</button>
    </div>
    <div class="two">
        <p class="title">Delete Training Order</p>
        <p class="info" id="deleteText"></p>
    </div>
    <div class="three">
        <form method="post">
            <input type="hidden" id="orderId" name="id" />
            <button id="deleteBtn" class="btn bg-btn btnRed">Delete</button>
        </form>
    </div>
</section>

<div class="overlay hidden"></div>

<div class="panel">
    <div class="body">
        <component type="typeof(Sidebar)" render-mode="WebAssemblyPrerendered" />
        <div class="properties">
            <div class="list-container">
                <div class="top">
                    <form method="post" id="maxCountForm">
                        <select asp-for="maxCount" class="drop-main" onchange="submitForm()">
                            <option value="10">10</option>
                            <option value="50">50</option>
                            <option value="@Model.TrainingOrder.Count()">Max</option>
                        </select>
                    </form>
                </div>
                <div class="order-list">
                    <ul>
                        @foreach (var item in Model.TrainingOrder.Reverse()) {
                            if (Model.listCount < Model.maxCount) {
                                <li id="@item.Id @item.TraineeId" class="@item.Status searchable">
                                    <div class="info">
                                        <div class="title">
                                            <p>Training Order ID: @item.Id </p>
                                        </div>
                                        <div class="sub">
                                            <p class="identifier">Trainee - </p>
                                            @item.TraineeId
                                        </div>
                                        <div class="sub">
                                            <p class="identifier">Status - </p>
                                            @{
                                                var type = "awaiting";
                                                if (item.Status.Equals("Active")) {
                                                    type = "active";
                                                } else if (item.Status.Equals("Verified")) {
                                                    type = "verified";
                                                } else if (item.Status.Equals("Completed")) {
                                                    type = "completed";
                                                }
                                                <p class="@type">@item.Status</p>
                                            }
                                        </div>
                                    </div>
                                    <div class="btns">
                                        <a class="btn bg-btn btnWhite" asp-page="./Details" asp-route-id="@item.Id">View</a>
                                        <a class="btn bg-btn btnRed" onclick="openModal(@item.Id)">Delete</a>
                                    </div>
                                </li>
                                Model.listCount++;
                            }
                        }
                    </ul>
                </div>
            </div>
            <div class="tool-container">
                <div class="tools">
                    <p class="title">Options:</p>
                    <div class="search">
                        <input placeholder="Search Training Orders" type="search" onchange="update(this)"/>
                    </div>
                    <div class="selections">
                        <p class="section-title">Show in List:</p>
                        <div class="section">
                            <input type="checkbox" checked id="Verified" onchange="checkedBox(this)" />
                            <p class="section-info">Verified</p>
                        </div>
                        <div class="section">
                            <input type="checkbox" checked id="Completed" onchange="checkedBox(this)" />
                            <p class="section-info">Completed</p>
                        </div>
                        <div class="section">
                            <input type="checkbox" checked id="Active" onchange="checkedBox(this)" />
                            <p class="section-info">Active</p>
                        </div>
                        <div class="section">
                            <input type="checkbox" checked id="Awaiting Approval" onchange="checkedBox(this)" />
                            <p class="section-info">Awaiting Approval</p>
                        </div>
                    </div>
                    <div class="btns">
                        <a asp-page="Create" class="btn btnWhite">Create Training Order</a>
                        <a asp-page="Assign" class="btn btnWhite">Assign Training Orders</a>
                        <a asp-page="AllView" class="btn btnWhite">Planning</a>
                        <a asp-page="Scheduling" class="btn btnWhite">Scheduling</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const closeModalBtn = document.querySelector(".btn-close");
    const deleteText = document.getElementById("deleteText");
    const deleteBtn = document.querySelector("#deleteBtn");
    const overlay = document.querySelector(".overlay");
    const modal = document.querySelector(".modal");

    const openModal = function (orderID) {
        modal.classList.remove("hidden");
        overlay.classList.remove("hidden");
        document.getElementById("orderId").value = orderID;
        deleteText.textContent = "Press the delete button to confirm the deletion of Training Order #" + orderID;
    };

    const closeModal = function () {
        modal.classList.add("hidden");
        overlay.classList.add("hidden");
    };

    closeModalBtn.addEventListener("click", closeModal);
    overlay.addEventListener("click", closeModal);

    function toggleDisplay(className, show) {
        var elements = document.getElementsByClassName(className);
        for (var i = 0; i < elements.length; i++) {
            elements[i].style.display = show ? "flex" : "none";
        }
    }

    function checkedBox(checkboxElem) {
        toggleDisplay(checkboxElem.id, checkboxElem.checked);
    }

    function update(searchElement) {
        var value = searchElement.value.toLowerCase();
        var elements = document.getElementsByClassName("searchable");

        if (value == "") {
            for (var i = 0; i < elements.length; i++) {
                elements[i].style.display = "flex";
            }
        } else {
            for (var i = 0; i < elements.length; i++) {
                var id = elements[i].id.toLowerCase(); 
                if (id.indexOf(value) === -1) {
                    elements[i].style.display = "none";
                } else {
                    elements[i].style.display = "flex";
                }
            }
        }
    }

    function submitForm() {
        document.getElementById('maxCountForm').submit();
    }
</script>