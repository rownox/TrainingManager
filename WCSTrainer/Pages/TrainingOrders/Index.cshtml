@page
@using Microsoft.AspNetCore.Identity
@model WCSTrainer.Pages.TrainingOrders.IndexModel

@inject SignInManager<UserAccount> SignInManager
@inject UserManager<UserAccount> UserManager

@{
   ViewData["Title"] = "Index";
}

<section class="modal hidden">
   <div class="one">
      <button class="btn-close btn btnRed">⨉</button>
   </div>
   <div class="two">
      <p class="title">Delete Training Order</p>
      <p class="info" id="deleteText"></p>
   </div>
   <div class="three">
      <form method="post">
         <input hidden id="orderId" name="id" />
         <button id="deleteBtn" class="btn bg-btn btnRed">Delete</button>
      </form>
   </div>
</section>

<div class="overlay hidden"></div>

<div class="panel">
   <div class="body">
      <partial name="_Sidebar" />
      <div class="properties">
         <div class="list-container">
            <div class="top">
               <form method="post" id="maxCountForm">
                  <select asp-for="maxCount" class="drop-main" onchange="submitForm()">
                     <option value="10">10</option>
                     <option value="50">50</option>
                     <option value="@Model.TrainingOrder.Count()">Max</option>
                  </select>
               </form>
            </div>
            @if (SignInManager.IsSignedIn(User)) {
               var user = await UserManager.GetUserAsync(User);
               if (user != null) {
                  <div class="order-list">
                     <ul>
                        @foreach (var item in Model.TrainingOrder.Reverse()) {
                           if (Model.listCount < Model.maxCount) {
                              var isAdmin = await UserManager.IsInRoleAsync(user, "admin");
                              if (!isAdmin) {
                                 if (item.CreatedByUserId != user.Id) {
                                    if (user.Employee != null) {
                                       if (item.TraineeId != user.Employee.Id) {
                                          if (!item.Trainers.Contains(user.Employee)) {
                                             continue;
                                          }
                                       }
                                    }
                                 }
                              }
                              string name;
                              if (item.Trainee != null) {
                                 name = item.Trainee.FirstName + " " + item.Trainee.LastName;
                              } else {
                                 name = "N/A";
                              }
                              <li id="@item.Id @name" class="@item.Status @(item.Archived ? "Archived" : "") searchable">
                                 <div class="info">
                                    <div class="title">
                                       <a class="name" asp-page="./Details" asp-route-id="@item.Id">Training Order #@item.Id</a>
                                       @{
                                          var type = "awaiting";
                                          if (item.Status.Equals("Active")) {
                                             type = "active";
                                          } else if (item.Status.Equals("Verified")) {
                                             type = "verified";
                                          } else if (item.Status.Equals("Completed")) {
                                             type = "completed";
                                          }
                                          <p class="@type black-pill">@item.Status</p>
                                          if (item.Archived == true) {
                                             <p class="archived black-pill">Archived</p>
                                          }
                                       }
                                    </div>
                                    <div class="sub">
                                       <div class="sub-text">
                                          <p class="identifier">Trainee - @name</p>
                                       </div>
                                       <div class="btns">
                                          <a class="btn bg-btn btnWhite" asp-page="./Details" asp-route-id="@item.Id">View</a>
                                          <a class="btn bg-btn btnRed" onclick="openModal(@item.Id)">Delete</a>
                                       </div>
                                    </div>
                                 </div>
                              </li>
                              Model.listCount++;
                           }
                        }
                     </ul>
                  </div>
               }
            }
         </div>

         <div class="tool-container">
            <div class="tools">
               <p class="title">Options:</p>
               <div class="search">
                  <input placeholder="Search Training Orders" type="search" onchange="update(this)" />
               </div>
               <div class="selections">
                  <p class="section-title">Show in List:</p>
                  <div class="section">
                     <input type="checkbox" id="Archived" onchange="checkedBox(this)" />
                     <p class="section-info black-pill archived">Archived</p>
                  </div>
                  <div class="section">
                     <input type="checkbox" checked id="Verified" onchange="checkedBox(this)" />
                     <p class="section-info black-pill verified">Verified</p>
                  </div>
                  <div class="section">
                     <input type="checkbox" checked id="Completed" onchange="checkedBox(this)" />
                     <p class="section-info black-pill completed">Completed</p>
                  </div>
                  <div class="section">
                     <input type="checkbox" checked id="Active" onchange="checkedBox(this)" />
                     <p class="section-info black-pill active">Active</p>
                  </div>
                  <div class="section">
                     <input type="checkbox" checked id="Awaiting Approval" onchange="checkedBox(this)" />
                     <p class="section-info black-pill awaiting">Awaiting Approval</p>
                  </div>
               </div>
               <div class="btns">
                  <a asp-page="Create" class="btn btnMenu">Create Training Order</a>
                  <a asp-page="AllView" class="btn btnMenu">Detailed View</a>
                  <a asp-page="Scheduling" class="btn btnMenu">Scheduling</a>
               </div>
            </div>
         </div>
      </div>
   </div>
</div>

<script>
   const closeModalBtn = document.querySelector(".btn-close");
   const deleteText = document.getElementById("deleteText");
   const deleteBtn = document.querySelector("#deleteBtn");
   const overlay = document.querySelector(".overlay");
   const modal = document.querySelector(".modal");

   const openModal = function (orderID) {
      modal.classList.remove("hidden");
      overlay.classList.remove("hidden");
      document.getElementById("orderId").value = orderID;
      deleteText.textContent = "Press the delete button to confirm the deletion of Training Order #" + orderID;
   };

   const closeModal = function () {
      modal.classList.add("hidden");
      overlay.classList.add("hidden");
   };

   closeModalBtn.addEventListener("click", closeModal);
   overlay.addEventListener("click", closeModal);

   function checkedBox(checkboxElem) {
      toggleDisplay(checkboxElem.id, checkboxElem.checked);
      localStorage.setItem(checkboxElem.id, checkboxElem.checked);
   }

   function loadCheckboxStates() {
      var checkboxes = document.querySelectorAll(".selections input[type='checkbox']");
      var archivedItems = document.getElementsByClassName("Archived");
      Array.from(archivedItems).forEach(item => {
         item.style.display = "none";
      });

      checkboxes.forEach(checkbox => {
         var storedState = localStorage.getItem(checkbox.id);
         if (storedState !== null) {
            checkbox.checked = (storedState === "true");
            toggleDisplay(checkbox.id, checkbox.checked);
         }
      });

      
   }

   function toggleDisplay(className, show) {
      var elements = document.getElementsByClassName(className);
      var archivedCheckbox = document.getElementById("Archived");
      var verifiedCheckbox = document.getElementById("Verified");
      var completedCheckbox = document.getElementById("Completed");
      var activeCheckbox = document.getElementById("Active");
      var awaitingCheckbox = document.getElementById("Awaiting Approval");

      for (var i = 0; i < elements.length; i++) {
         var item = elements[i];
         var isArchived = item.classList.contains("Archived");
         var isVerified = item.classList.contains("Verified");
         var isCompleted = item.classList.contains("Completed");
         var isActive = item.classList.contains("Active");
         var isAwaiting = item.classList.contains("Awaiting Approval");

         item.style.display = "none";

         if (isArchived && archivedCheckbox.checked) {
            if (
               (isVerified && verifiedCheckbox.checked) ||
               (isCompleted && completedCheckbox.checked) ||
               (isActive && activeCheckbox.checked) ||
               (isAwaiting && awaitingCheckbox.checked)
            ) {
               item.style.display = "flex";
            }
         } else if (!isArchived) {
            if (
               (isVerified && verifiedCheckbox.checked) ||
               (isCompleted && completedCheckbox.checked) ||
               (isActive && activeCheckbox.checked) ||
               (isAwaiting && awaitingCheckbox.checked)
            ) {
               item.style.display = "flex";
            }
         }
      }
   }



   function update(searchElement) {
      var value = searchElement.value.toLowerCase();
      var elements = document.getElementsByClassName("searchable");

      if (value == "") {
         for (var i = 0; i < elements.length; i++) {
            elements[i].style.display = "flex";
         }
      } else {
         for (var i = 0; i < elements.length; i++) {
            var id = elements[i].id.toLowerCase();
            if (id.indexOf(value) === -1) {
               elements[i].style.display = "none";
            } else {
               elements[i].style.display = "flex";
            }
         }
      }
   }

   function submitForm() {
      document.getElementById('maxCountForm').submit();
   }

   window.onload = loadCheckboxStates;
</script>
