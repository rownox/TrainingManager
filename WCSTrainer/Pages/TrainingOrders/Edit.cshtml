@page
@model Pages.TrainingOrders.EditModel

@{
    ViewData["Title"] = "Edit";
}

@using WCSTrainer.Components

<div id="sv-comp-people" class="people-component hidden"></div>
<div class="overlay hidden"></div>

<div class="panel">
    <div class="body">
        <component type="typeof(Sidebar)" render-mode="WebAssemblyPrerendered" />
        <div class="properties">
            <div class="user-form">
                <p class="title">Edit Training Order #@Html.DisplayFor(model => model.TrainingOrder.Id)</p>
                <div class="field-container">
                    <form method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="TrainingOrder.Id" />
                        <input asp-for="TrainingOrder.Status" type="hidden" />
                        <input type="hidden" id="employeesData" value="@ViewData["EmployeesJson"]" />
                        <input type="hidden" id="trainergroupsData" value="@ViewData["TrainerGroupsJson"]" />
                        @if (!Model.TrainingOrder.Status.Equals("Awaiting Approval")) {
                            <div class="form-group">
                                <div class="form">
                                    <div class="labels">
                                        <span asp-validation-for="TrainingOrder.Trainers" class="text-danger"></span>
                                    </div>
                                    <div class="selections">
                                        <div class="btn bg-btn btnWhite" onclick="openComponent('trainers')"><p>Select Trainers</p></div>
                                        <ul id="trainerList">
                                            @foreach (var employee in Model.Employees) {
                                                foreach(string trainerID in Model.TrainersList) {
                                                    if (trainerID == employee.Id.ToString()) {
                                                        <li draggable="true" class="pill">@employee.FirstName @employee.LastName</li>
                                                    }
                                                }
                                            }
                                        </ul>
                                        <input id="trainersInput" asp-for="TrainingOrder.Trainers" />
                                    </div>
                                </div>
                            </div>
                        } else {
                            <input id="trainersInput" asp-for="TrainingOrder.Trainers" type="hidden" />
                        }
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <span asp-validation-for="TrainingOrder.Trainee" class="text-danger"></span>
                                </div>
                                <div class="selections">
                                    <div class="btn bg-btn btnWhite" onclick="openComponent('trainees')"><p>Select Trainee</p></div>
                                    <ul id="trainee">
                                        @if (!string.IsNullOrEmpty(Model.Trainee)) {
                                            var trainee = Model.Employees.FirstOrDefault(e => e.Id.ToString() == Model.Trainee);
                                            if (trainee != null) {
                                                <li value="@trainee.Id" class="pill">@trainee.FirstName @trainee.LastName</li>
                                            }
                                        }
                                    </ul>
                                    <input id="traineeInput" asp-for="TrainingOrder.Trainee" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Skill</p>
                                    <span asp-validation-for="TrainingOrder.Skill" class="text-danger"></span>
                                </div>
                                <textarea rows="4" asp-for="TrainingOrder.Skill"></textarea>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Description</p>
                                </div>
                                <textarea rows="4" asp-for="TrainingOrder.Description"></textarea>
                            </div>
                        </div>
                        @if (!Model.TrainingOrder.Status.Equals("Awaiting Approval")) {
                            <div class="form-group">
                                <div class="form">
                                    <div class="labels">
                                        <p class="control-label">Begin Date</p>
                                        <span asp-validation-for="TrainingOrder.BeginDate" class="text-danger"></span>
                                    </div>
                                    <input type="date" asp-for="TrainingOrder.BeginDate" class="form-control" />
                                </div>
                                <div class="form">
                                    <div class="labels">
                                        <p class="control-label">End Date</p>
                                        <span asp-validation-for="TrainingOrder.EndDate" class="text-danger"></span>
                                    </div>
                                    <input type="date" asp-for="TrainingOrder.EndDate" class="form-control" />
                                </div>
                            </div>
                        } else {
                            <input type="hidden" asp-for="TrainingOrder.EndDate" />
                            <input type="hidden" asp-for="TrainingOrder.BeginDate" />
                        }
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Training Hours Needed</p>
                                    <span asp-validation-for="TrainingOrder.Duration" class="text-danger"></span>
                                </div>
                                <input asp-for="TrainingOrder.Duration" class="form-control" />
                            </div>
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Learning Medium</p>
                                    <span asp-validation-for="TrainingOrder.Medium" class="text-danger"></span>
                                </div>
                                <input asp-for="TrainingOrder.Medium" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Priority Level</p>
                                    <span asp-validation-for="TrainingOrder.Priority" class="text-danger"></span>
                                </div>
                                <select asp-for="TrainingOrder.Priority" class="form-drop2">
                                    <option value="High">High</option>
                                    <option value="Medium">Medium</option>
                                    <option value="Low">Low</option>
                                </select>
                            </div>
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Location</p>
                                    <span asp-validation-for="TrainingOrder.Location" class="text-danger"></span>
                                </div>
                                <select asp-for="TrainingOrder.Location" class="form-drop2">
                                    <option value="1">One</option>
                                    <option value="2">Two</option>
                                    <option value="3">Three</option>
                                    <option value="4">Four</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="btn-container">
                                    <input type="submit" value="Save" class="btn bg-btn btnGreen" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var employeesDataElement = document.getElementById('employeesData');
    var employeesData = employeesDataElement.value ? JSON.parse(employeesDataElement.value) : [];
    window.employeesData = employeesData;

    var trainergroupsDataElement = document.getElementById('trainergroupsData');
    var trainergroupsData = trainergroupsDataElement.value ? JSON.parse(trainergroupsDataElement.value) : [];
    window.trainergroupsData = trainergroupsData;

    var trainersInput = document.getElementById("trainersInput");
    var trainList = document.getElementById("trainerList");
    var trainee = document.getElementById("trainee");
    var traineeInput = document.getElementById("traineeInput");
    var peopleComponent = document.getElementById("sv-comp-people");
    var person = document.getElementsByClassName("person");
    const overlay = document.querySelector(".overlay");

    function openComponent(mode) {
        window.peopleComponentMode = mode;
        window.dispatchEvent(new Event('peopleComponentModeChange'));
    
        var peopleComponent = document.getElementById("sv-comp-people");
        var overlay = document.querySelector(".overlay");
        peopleComponent.classList.remove("hidden");
        overlay.classList.remove("hidden");
    }

    const closeComponent = function () {
        peopleComponent.classList.add("hidden");
        overlay.classList.add("hidden");
    };

    overlay.addEventListener("click", closeComponent);

    document.addEventListener("addTrainerEvent", function (event) {
        addTrainer(event.detail.names, event.detail.ids);
        closeComponent();
    });

    document.addEventListener("addTraineeEvent", function (event) {
        addTrainee(event.detail.names, event.detail.ids);
        closeComponent();
    });

    trainee.addEventListener("click", function (event) {
        if (event.target.tagName === "LI") {
            event.target.remove();
            updateTraineeInput();
        }
    });

    trainList.addEventListener("click", function (event) {
        if (event.target.tagName === "LI") {
            event.target.remove();
            updateTrainersInput();
        }
    });

    Array.from(person).forEach(item => {
        item.addEventListener("click", event => {
            addTrainer(event);
        });
    });

    function addTrainer(trainerNames, trainerIds) {
        if (!trainerNames.trim() || !trainerIds.trim()) {
            return;
        }

        var trainerList = document.getElementById("trainerList");
        var names = trainerNames.split(',');
        var ids = trainerIds.split(',');

        for (var i = 0; i < names.length; i++) {
            if (!Array.from(trainerList.getElementsByTagName("li")).some(li => li.textContent.trim() === names[i].trim())) {
                trainerList.innerHTML += `<li draggable="true" class="pill" data-id="${ids[i].trim()}">${names[i].trim()}</li>`;
            }
        }

        updateTrainersInput();
    }

    function addTrainee(traineeName, traineeId) {
        if (!traineeName.trim() || !traineeId.trim()) {
            return;
        }

        var traineeList = document.getElementById("trainee");
        traineeList.innerHTML = `<li value="${traineeId}" class="pill">${traineeName}</li>`;

        updateTraineeInput();
    }

    function updateTrainersInput() {
        var trainerList = document.getElementById("trainerList");
        var trainersInput = document.getElementById("trainersInput");
        var trainerListItems = Array.from(trainerList.getElementsByTagName("li"));
        trainersInput.value = trainerListItems.map(function (item) {
            return item.getAttribute("data-id") || item.textContent.trim();
        }).join(", ");
    }

    function updateTraineeInput() {
        var traineeList = document.getElementById("trainee");
        var traineeInput = document.getElementById("traineeInput");
        var traineeListItems = Array.from(traineeList.getElementsByTagName("li"));
        traineeInput.value = traineeListItems.map(function (item) {
            return item.getAttribute("value");
        }).join(", ");
    }

    trainList.addEventListener("DOMSubtreeModified", updateTrainersInput);
    trainee.addEventListener("DOMSubtreeModified", updateTraineeInput);

    updateTrainersInput();
    updateTraineeInput();
</script>


@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}