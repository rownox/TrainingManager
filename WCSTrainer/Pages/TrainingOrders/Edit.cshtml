@page
@model Pages.TrainingOrders.EditModel

@{
    ViewData["Title"] = "Edit";
}

@using WCSTrainer.Components

<div id="sv-comp-people" class="people-component hidden"></div>
<div class="overlay hidden"></div>

<div class="panel">
    <div class="body">
        <component type="typeof(Sidebar)" render-mode="WebAssemblyPrerendered" />
        <div class="properties">
            <div class="user-form">
                <p class="title">Edit Training Order #@Html.DisplayFor(model => model.TrainingOrder.Id)</p>
                <div class="field-container">
                    <form method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="TrainingOrder.Id" />
                        <input asp-for="TrainingOrder.Status" type="hidden" />
                        <input type="hidden" id="employeesData" value="@ViewData["EmployeesJson"]" />
                        <input type="hidden" id="trainergroupsData" value="@ViewData["TrainerGroupsJson"]" />
                        @if (!Model.TrainingOrder.Status.Equals("Awaiting Approval")) {
                            <div class="form-group">
                                <div class="form">
                                    <div class="labels">
                                        <span asp-validation-for="TrainingOrder.Trainers" class="text-danger"></span>
                                    </div>
                                    <div class="selections">
                                        <div class="btn bg-btn btnWhite" onclick="openComponent()"><p>Select Trainers</p></div>
                                        <ul id="trainerList">
                                            @foreach (string trainerName in Model.TrainersList) {
                                                <li draggable="true" class="pill">@trainerName</li>
                                            }
                                        </ul>
                                    </div>
                                    <input id="trainersInput" asp-for="TrainingOrder.Trainers" type="hidden" />
                                </div>
                            </div>
                        } else {
                            <input id="trainersInput" asp-for="TrainingOrder.Trainers" type="hidden" />
                        }
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <span asp-validation-for="TrainingOrder.Trainee" class="text-danger"></span>
                                </div>
                                <div class="selections">
                                    <div class="btn bg-btn btnWhite" onclick="openComponent()"><p>Select Trainee</p></div>
                                    <ul id="trainee">
                                        @foreach (var employee in Model.Employees.Where(e => e.Status == "Trainee")) {
                                            <li value="@employee.Id" class="pill">@employee.FirstName @employee.LastName</li>
                                        }
                                    </ul>
                                </div>
                                <input id="traineeInput" asp-for="TrainingOrder.Trainee" type="hidden" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Skill</p>
                                    <span asp-validation-for="TrainingOrder.Skill" class="text-danger"></span>
                                </div>
                                <textarea rows="4" asp-for="TrainingOrder.Skill"></textarea>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Description</p>
                                </div>
                                <textarea rows="4" asp-for="TrainingOrder.Description"></textarea>
                            </div>
                        </div>
                        @if (!Model.TrainingOrder.Status.Equals("Awaiting Approval")) {
                            <div class="form-group">
                                <div class="form">
                                    <div class="labels">
                                        <p class="control-label">Begin Date</p>
                                        <span asp-validation-for="TrainingOrder.BeginDate" class="text-danger"></span>
                                    </div>
                                    <input type="date" asp-for="TrainingOrder.BeginDate" class="form-control" />
                                </div>
                                <div class="form">
                                    <div class="labels">
                                        <p class="control-label">End Date</p>
                                        <span asp-validation-for="TrainingOrder.EndDate" class="text-danger"></span>
                                    </div>
                                    <input type="date" asp-for="TrainingOrder.EndDate" class="form-control" />
                                </div>
                            </div>
                        } else {
                            <input type="hidden" asp-for="TrainingOrder.EndDate" />
                            <input type="hidden" asp-for="TrainingOrder.BeginDate" />
                        }
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Training Hours Needed</p>
                                    <span asp-validation-for="TrainingOrder.Duration" class="text-danger"></span>
                                </div>
                                <input asp-for="TrainingOrder.Duration" class="form-control" />
                            </div>
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Learning Medium</p>
                                    <span asp-validation-for="TrainingOrder.Medium" class="text-danger"></span>
                                </div>
                                <input asp-for="TrainingOrder.Medium" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Priority Level</p>
                                    <span asp-validation-for="TrainingOrder.Priority" class="text-danger"></span>
                                </div>
                                <select asp-for="TrainingOrder.Priority" class="form-drop2">
                                    <option value="High">High</option>
                                    <option value="Medium">Medium</option>
                                    <option value="Low">Low</option>
                                </select>
                            </div>
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Location</p>
                                    <span asp-validation-for="TrainingOrder.Location" class="text-danger"></span>
                                </div>
                                <select asp-for="TrainingOrder.Location" class="form-drop2">
                                    <option value="1">One</option>
                                    <option value="2">Two</option>
                                    <option value="3">Three</option>
                                    <option value="4">Four</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="btn-container">
                                    <input type="submit" value="Save" class="btn bg-btn btnGreen" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        window.employeesData = JSON.parse(document.getElementById('employeesData').value);
        window.trainergroupsData = JSON.parse(document.getElementById('trainergroupsData').value);

        var trainersInput = document.getElementById("trainersInput");
        var trainList = document.getElementById("trainerList");
        var peopleComponent = document.getElementById("sv-comp-people");
        var person = document.getElementsByClassName("person");
        const overlay = document.querySelector(".overlay");

        const openComponent = function () {
            peopleComponent.classList.remove("hidden");
            overlay.classList.remove("hidden");
        };

        const closeComponent = function () {
            peopleComponent.classList.add("hidden");
            overlay.classList.add("hidden");
        };

        overlay.addEventListener("click", closeComponent);

        document.addEventListener("addTrainerEvent", function (event) {
            addTrainer(event.detail);
            closeComponent();
        });

        trainList.addEventListener("click", function (event) {
            if (event.target.tagName === "LI") {
                event.target.remove();
                updateTrainersInput();
            }
        });

        Array.from(person).forEach(item => {
            item.addEventListener("click", event => {
                addTrainer(event);
            });
        });

        function addTrainer(list) {
            let items = list.split(',').map(item => item.trim());

            items.forEach(item => {
                if (!Array.from(trainList.getElementsByTagName("li")).some(li => li.textContent.trim() === item)) {
                    trainList.innerHTML += `<li draggable="true" class="pill">${item}</li>`;
                }
            });

            updateTrainersInput();
        }

        function updateTrainersInput() {
            var trainers = Array.from(trainList.getElementsByTagName("li")).map(function (item) {
                return item.textContent;
            });
            trainersInput.value = trainers.join(", ");
        }

        updateTrainersInput();
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}