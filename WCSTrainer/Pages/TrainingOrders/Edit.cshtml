@page
@model Pages.TrainingOrders.EditModel

@{
    ViewData["Title"] = "Edit";
}

@using WCSTrainer.Components

<div id="sv-comp-people" class="people-component hidden"></div>
<div class="overlay hidden"></div>

<div class="panel">
    <div class="body">
        <component type="typeof(Sidebar)" render-mode="WebAssemblyPrerendered" />
        <div class="properties">
            <div class="user-form">
                <p class="title">Edit Training Order #@Html.DisplayFor(model => model.TrainingOrder.Id)</p>
                <div class="field-container">
                    <form method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="TrainingOrder.Id" />
                        <input asp-for="TrainingOrder.status" type="hidden" />
                        @if (!Model.TrainingOrder.status.Equals("Awaiting Approval")) {
                            <div class="form-group">
                                <div class="form">
                                    <div class="labels">
                                        <p class="control-label">Trainers</p>
                                        <p id="trainerDanger" class="text-danger" style="display: none;">Please select at least one trainer.</p>
                                    </div>
                                    <div class="selections">
                                        <ul id="trainerList">
                                            @foreach (string trainerName in Model.trainersList) {
                                                <li draggable="true" class="pill">@trainerName</li>
                                            }
                                        </ul>
                                    </div>
                                    <div class="selectors">
                                        <div class="selector">
                                            <div class="btn bg-btn btnWhite" onclick="openComponent()"><p>Select Trainers</p></div>
                                        </div>
                                    </div>
                                    <input id="trainersInput" asp-for="TrainingOrder.trainers" type="hidden" />
                                </div>
                            </div>
                        } else {
                            <input id="trainersInput" asp-for="TrainingOrder.trainers" type="hidden" />
                        }
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Skill</p>
                                    <span asp-validation-for="TrainingOrder.skill" class="text-danger"></span>
                                </div>
                                <input asp-for="TrainingOrder.skill" class="form-control" />
                            </div>
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Trainee</p>
                                    <span asp-validation-for="TrainingOrder.trainee" class="text-danger"></span>
                                </div>
                                <select asp-for="TrainingOrder.trainee" class="form-drop2">
                                    @foreach (Models.Employee employee in Model.Employees) {
                                        if (employee.Status.Equals("Trainee")) {
                                            <option value="@employee.Id">@employee.FirstName @employee.LastName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        @if (!Model.TrainingOrder.status.Equals("Awaiting Approval")) {
                            <div class="form-group">
                                <div class="form">
                                    <div class="labels">
                                        <p class="control-label">Begin Date</p>
                                        <span asp-validation-for="TrainingOrder.beginDate" class="text-danger"></span>
                                    </div>
                                    <input type="date" asp-for="TrainingOrder.beginDate" class="form-control" />
                                </div>
                                <div class="form">
                                    <div class="labels">
                                        <p class="control-label">End Date</p>
                                        <span asp-validation-for="TrainingOrder.endDate" class="text-danger"></span>
                                    </div>
                                    <input type="date" asp-for="TrainingOrder.endDate" class="form-control" />
                                </div>
                            </div>
                        } else {
                            <input type="hidden" asp-for="TrainingOrder.endDate"/>
                            <input type="hidden" asp-for="TrainingOrder.beginDate" />
                        }
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Location</p>
                                    <span asp-validation-for="TrainingOrder.location" class="text-danger"></span>
                                </div>
                                <select asp-for="TrainingOrder.location" class="form-drop2">
                                    <option value="1">One</option>
                                    <option value="2">Two</option>
                                    <option value="3">Three</option>
                                    <option value="4">Four</option>
                                </select>
                            </div>
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Medium</p>
                                    <span asp-validation-for="TrainingOrder.medium" class="text-danger"></span>
                                </div>
                                <input asp-for="TrainingOrder.medium" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Training Hours Needed</p>
                                    <span asp-validation-for="TrainingOrder.duration" class="text-danger"></span>
                                </div>
                                <input asp-for="TrainingOrder.duration" class="form-control" />
                            </div>
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Priority Level</p>
                                    <span asp-validation-for="TrainingOrder.priorityLevel" class="text-danger"></span>
                                </div>
                                <select asp-for="TrainingOrder.priorityLevel" class="form-drop2">
                                    <option value="3">3 - High</option>
                                    <option value="2">2 - Medium</option>
                                    <option value="1">1 - Low</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Description</p>
                                    <span asp-validation-for="TrainingOrder.description" class="text-danger"></span>
                                </div>
                                <input asp-for="TrainingOrder.description" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="btn-container">
                                    <input type="submit" value="Save" class="btn bg-btn btnGreen" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var trainersInput = document.getElementById("trainersInput");
    var trainList = document.getElementById("trainerList");
    var trainerDanger = document.getElementById("trainerDanger");
    var peopleComponent = document.getElementById("sv-comp-people");
    var person = document.getElementsByClassName("person");
    const overlay = document.querySelector(".overlay");

    const openComponent = function () {
        peopleComponent.classList.remove("hidden");
        overlay.classList.remove("hidden");
    };

    const closeComponent = function () {
        peopleComponent.classList.add("hidden");
        overlay.classList.add("hidden");
    };

    overlay.addEventListener("click", closeComponent);

    document.addEventListener("addTrainerEvent", function (event) {
        addTrainer(event.detail);
        closeComponent();
    });

    trainList.addEventListener("click", function (event) {
        if (event.target.tagName === "LI") {
            event.target.remove();
            updateTrainersInput();
        }
    });

    person.forEach(item => {
        item.addEventListener("click", event => {
            addTrainer(event);
        });
    });

    function addTrainer(list) {
        let items = list.split(',').map(item => item.trim());

        items.forEach(item => {
            if (!Array.from(trainList.getElementsByTagName("li")).some(li => li.textContent.trim() === item)) {
                trainList.innerHTML += `<li draggable="true" class="pill">${item}</li>`;
            }
        });

        updateTrainersInput();
    }

    function updateTrainersInput() {
        var trainers = Array.from(trainList.getElementsByTagName("li")).map(function (item) {
            return item.textContent;
        });
        trainersInput.value = trainers.join(", ");
    }

    function toggleSubmitButton() {
        var submitButton = document.querySelector('input[type="submit"]');
        if (trainList.getElementsByTagName("li").length > 0) {
            submitButton.disabled = false;
        } else {
            submitButton.disabled = true;
            trainerDanger.style.display = "none";
        }
    }

    function validateForm(event) {
        if (trainList.getElementsByTagName("li").length === 0) {
            event.preventDefault();
            trainerDanger.style.display = "block";
        }
    }

    trainList.addEventListener("DOMNodeInserted", toggleSubmitButton);
    trainList.addEventListener("DOMNodeRemoved", toggleSubmitButton);
    document.querySelector('form').addEventListener("submit", validateForm);

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}