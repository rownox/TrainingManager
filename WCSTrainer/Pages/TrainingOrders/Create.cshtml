@page
@model WCSTrainer.Pages.TrainingOrders.CreateModel

@using Microsoft.AspNetCore.Identity;
@inject SignInManager<UserAccount> SignInManager
@inject UserManager<UserAccount> UserManager

@{
   ViewData["Title"] = "Create";
}

<div id="people-component" class="people-component hidden">
   <partial name="_People" model="Model.Employees" />
</div>
<div class="overlay hidden" onclick="closeComponent()"></div>

<div class="panel">
   <div class="body">
      <partial name="_Sidebar" />
      <div class="properties">
         <div class="user-form">
            <p class="title">Create New Training Order</p>
            <p class="description">Fill out each required field.</p>
            @if (SignInManager.IsSignedIn(User)) {
               var user = await UserManager.GetUserAsync(User);
               if (user != null) {
                  <div class="field-container">
                     <form method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input asp-for="TrainingOrder.Status" hidden value="Awaiting Approval" />
                        @{
                           var date = DateOnly.FromDateTime(DateTime.Now);
                           <input asp-for="TrainingOrder.CreateDate" type="hidden" value="@date" />
                        }
                        <input asp-for="TrainingOrder.CreatedByUserId" type="hidden" value="@user.Id" />

                        <div class="form-group">
                           <div class="form">
                              <div class="labels">
                                 <p class="control-label">Trainee</p>
                                 <span asp-validation-for="TrainingOrder.TraineeId" class="text-danger"></span>
                              </div>
                              <div class="selections">
                                 <ul id="traineeList" class="pill-container"></ul>
                                 <div class="btn bg-btn btnWhite" onclick="openComponent('trainee')">
                                    <p>Select Trainee</p>
                                 </div>
                                 <input id="traineeInput" asp-for="TrainingOrder.TraineeId" hidden />
                              </div>
                           </div>
                        </div>
                        <div class="form-group">
                           <div class="form">
                              <div class="labels">
                                 <p class="control-label">Lesson</p>
                                 <span asp-validation-for="TrainingOrder.LessonId" class="text-danger"></span>
                              </div>
                              <select asp-for="TrainingOrder.LessonId" class="form-control" asp-items="@Model.LessonSelectList"></select>
                           </div>
                        </div>
                        <div class="form-group">
                           <div class="form">
                              <div class="btn-container">
                                 <input type="submit" value="Create" class="btn bg-btn btnGreen" />
                              </div>
                           </div>
                        </div>
                     </form>
                  </div>
               } else {
                  <p>User invalid.</p>
               }
            } else {
               <p>Not signed in.</p>
            }
         </div>
      </div>
   </div>
</div>



@section Scripts {
   @{
      await Html.RenderPartialAsync("_ValidationScriptsPartial");
   }
}
