@page
@model WCSTrainer.Pages.TrainingOrders.CreateModel

@{
    ViewData["Title"] = "Create";
}

@using WCSTrainer.Components

<div id="sv-comp-people" class="people-component hidden"></div>
<div class="overlay hidden"></div>

<div class="panel">
    <div class="body">
        <component type="typeof(Sidebar)" render-mode="WebAssemblyPrerendered" />
        <div class="properties">
            <div class="user-form">
                <p class="title">Create New Training Order</p>
                <p class="description">Fill out each required field.</p>
                <div class="field-container">
                    <form method="post">
                        <div asp-validation-summary="All" class="text-danger"></div>

                        <input asp-for="TrainingOrder.Status" type="hidden" value="Awaiting Approval" />
                        <input asp-for="TrainingOrder.CreateDate" type="hidden" value="@Model.Day" />
                        <input asp-for="TrainingOrder.BeginDate" type="hidden" value="@Model.Day" />
                        <input asp-for="TrainingOrder.EndDate" type="hidden" value="@Model.Day" />
                        <input type="hidden" id="employeesData" value="@ViewData["EmployeesJson"]" />
                        <input type="hidden" id="trainergroupsData" value="@ViewData["TrainerGroupsJson"]" />

                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <span asp-validation-for="TrainingOrder.TraineeId" class="text-danger"></span>
                                </div>
                                 <div class="selections">
                                    <div class="btn bg-btn btnWhite" onclick="openComponent('trainees')"><p>Select Trainee</p></div>
                                    <ul id="trainee" class="pill-container">
                                    </ul>
                                    <input id="traineeInput" asp-for="TrainingOrder.TraineeId" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Description*</p>
                                    <span asp-validation-for="TrainingOrder.Description" class="text-danger"></span>
                                </div>
                                <textarea rows="4" asp-for="TrainingOrder.Description" placeholder="Describe the skill being trained and the goal."></textarea>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Location*</p>
                                    <span asp-validation-for="TrainingOrder.LocationId" class="text-danger"></span>
                                </div>
@*                                 <select asp-for="TrainingOrder.LocationId" class="form-control">
                                    @foreach(var loc in Model.Locations) {
                                        <option value="@loc.Id">@loc.Name</option>
                                    }
                                </select> *@
                                <input asp-for="TrainingOrder.LocationId" class="form-control"/>
                            </div>
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Learning Medium*</p>
                                    <span asp-validation-for="TrainingOrder.Medium" class="text-danger"></span>
                                </div>
                                <input asp-for="TrainingOrder.Medium" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Training Hours Needed</p>
                                    <span asp-validation-for="TrainingOrder.Duration" class="text-danger"></span>
                                </div>
                                <input type="text" asp-for="TrainingOrder.Duration" class="form-control" />
                            </div>
                            <div class="form">
                                <div class="labels">
                                    <p class="control-label">Priority Level*</p>
                                    <span asp-validation-for="TrainingOrder.Priority" class="text-danger"></span>
                                </div>
                                <select asp-for="TrainingOrder.Priority" class="form-drop2">
                                    <option value="High">High</option>
                                    <option value="Medium">Medium</option>
                                    <option value="Low">Low</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form">
                                <div class="btn-container">
                                    <input type="submit" value="Create" class="btn bg-btn btnGreen" />
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

<script>
    var employeesDataElement = document.getElementById('employeesData');
    var employeesData = employeesDataElement.value ? JSON.parse(employeesDataElement.value) : [];
    window.employeesData = employeesData;

    var trainergroupsDataElement = document.getElementById('trainergroupsData');
    var trainergroupsData = trainergroupsDataElement.value ? JSON.parse(trainergroupsDataElement.value) : [];
    window.trainergroupsData = trainergroupsData;

    var employeesDataElement = document.getElementById('employeesData');
    var trainergroupsDataElement = document.getElementById('trainergroupsData');

    var peopleComponent = document.getElementById("sv-comp-people");
    var overlay = document.querySelector(".overlay");
    var trainee = document.getElementById("trainee");
    var traineeInput = document.getElementById("traineeInput");
    var person = document.getElementsByClassName("person");

    document.addEventListener('DOMContentLoaded', function () {

        function safeAddEventListener(element, event, handler) {
            if (element) {
                element.addEventListener(event, handler);
            }
        }

        safeAddEventListener(overlay, "click", closeComponent);

        safeAddEventListener(trainee, "click", function (event) {
            if (event.target.tagName === "LI") {
                event.target.remove();
                updateTraineeInput();
            }
        });

        function addTrainee(traineeName, traineeId) {
            if (!traineeName || !traineeName.trim() || !traineeId) return;

            var traineeList = document.getElementById("trainee");
            if (!traineeList) return;

            traineeList.innerHTML = `<li value="${traineeId}" class="pill">${traineeName.trim()}</li>`;
            updateTraineeInput();
        }

        function updateTraineeInput() {
            if (!trainee || !traineeInput) return;

            var traineeListItems = Array.from(trainee.getElementsByTagName("li"));
            traineeInput.value = traineeListItems.length > 0 ? traineeListItems[0].getAttribute("value") : "";
        }

        if (trainee) {
            const traineeObserver = new MutationObserver(updateTraineeInput);
            traineeObserver.observe(trainee, { childList: true, subtree: true });
        }

        document.addEventListener("addTraineeEvent", function (event) {
            addTrainee(event.detail.name, event.detail.id);
            closeComponent();
        });

        updateTraineeInput();
    });

    function openComponent(mode) {
        window.peopleComponentMode = mode;
        window.dispatchEvent(new Event('peopleComponentModeChange'));

        var peopleComponent = document.getElementById("sv-comp-people");
        var overlay = document.querySelector(".overlay");
        if (peopleComponent) peopleComponent.classList.remove("hidden");
        if (overlay) overlay.classList.remove("hidden");
    }

    function closeComponent() {
        var peopleComponent = document.getElementById("sv-comp-people");
        var overlay = document.querySelector(".overlay");
        if (peopleComponent) peopleComponent.classList.add("hidden");
        if (overlay) overlay.classList.add("hidden");
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
