@page
@model WCSTrainer.Pages.TrainingOrders.ApprovalModel
@{
    ViewData["Title"] = "Approval";
}

<div class="panel">
    <div class="body">
        <div class="side-bar">
            <div class="ul">
                <a href=""><div class="li">Statistics</div></a>
                <a asp-page="Index"><div class="selected">Training Orders</div></a>
                <a href=""><div class="li">Manage Trainers</div></a>
                <a href=""><div class="li">Manage Trainees</div></a>
                <a href=""><div class="li">Account Settings</div></a>
            </div>
        </div>
        <div class="properties">
            <div class="user-form">
                <p class="title">Approve Training Order #@Html.DisplayFor(model => model.TrainingOrder.Id)</p>
                <hr />
                <div class="field-container">
                    <form method="post">

                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="TrainingOrder.Id" />

                        <input asp-for="TrainingOrder.skill" type="hidden"/>
                        <input asp-for="TrainingOrder.trainee" type="hidden"/>
                        <input asp-for="TrainingOrder.createDate" type="hidden"/>
                        <input asp-for="TrainingOrder.location" type="hidden"/>
                        <input asp-for="TrainingOrder.medium" type="hidden"/>
                        <input asp-for="TrainingOrder.status" type="hidden" value="Active"/>
                        <input asp-for="TrainingOrder.duration" type="hidden"/>
                        <input asp-for="TrainingOrder.description" type="hidden"/>

                        <div class="form-group">

                            <div class="labels">
                                <p class="control-label">Trainers</p>
                                <span asp-validation-for="TrainingOrder.trainers" class="text-danger"></span>
                            </div>
                            <div class="selections">
                                <ul id="trainerList">
                                    @foreach (string trainerName in Model.TrainingOrder.trainers) {
                                        <li>@trainerName</li>
                                    }
                                </ul>
                            </div>
                            <div class="selectors">
                                <div class="selector">
                                    <div class="btn btnWhite" id="indiButton"><p>Individual</p></div>
                                    <div class="form-drop" id="individual">
                                        <ul id="indiList">
                                            @foreach (Models.Employee employee in Model.Employees) {
                                                if (employee.Status.Equals("Trainer")) {
                                                    <li>@employee.FirstName @employee.LastName</li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                </div>
                                <div class="selector">
                                    <div class="btn btnWhite" id="groupButton"><p>Groups</p></div>
                                    <div class="form-drop" id="groups">
                                        <ul id="groupList">
                                            <li>HR</li>
                                            <li>Shipping</li>
                                            <li>Sales</li>
                                            <li>Engineering</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <input id="trainersInput" asp-for="TrainingOrder.trainers" type="hidden" />
                        </div>

                        <div class="form-group">
                            <div class="labels">
                                <p class="control-label">Begin Date*</p>
                                <span asp-validation-for="TrainingOrder.beginDate" class="text-danger"></span>
                            </div>
                            <input type="date" asp-for="TrainingOrder.beginDate" class="form-control" />
                        </div>

                        <div class="form-group">
                            <div class="labels">
                                <p class="control-label">End Date*</p>
                                <span asp-validation-for="TrainingOrder.endDate" class="text-danger"></span>
                            </div>
                            <input type="date" asp-for="TrainingOrder.endDate" class="form-control" />
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Save" class="btn btnGreen" />
                        </div>
                        <div class="form-group">
                            <a asp-page="Index" class="btn btnBlue">Return To Menu</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var indiButton = document.getElementById("indiButton");
    var groupButton = document.getElementById("groupButton");
    var individual = document.getElementById("individual");
    var groups = document.getElementById("groups");
    var trainList = document.getElementById("trainerList");
    var indiList = document.getElementById("indiList");
    var groupList = document.getElementById("groupList");
    var trainersInput = document.getElementById("trainersInput");
    var testList = document.getElementById("testList");

    indiButton.addEventListener("click", function () {
        if (individual.style.display == "flex") {
            individual.style.display = "none";
        } else {
            individual.style.display = "flex";
        }
        groups.style.display = "none";

    });

    groupButton.addEventListener("click", function () {
        if (groups.style.display == "flex") {
            groups.style.display = "none";
        } else {
            groups.style.display = "flex";
        }
        individual.style.display = "none";
    });

    trainList.addEventListener("click", function (event) {
        if (event.target.tagName === "LI") {
            event.target.remove();
        }
    });

    indiList.addEventListener("click", function (event) {
        if (event.target.tagName === "LI") {
            trainer1(event.target.textContent);
        }
    });

    groupList.addEventListener("click", function (event) {
        if (event.target.tagName === "LI") {
            trainer2(event.target.textContent);
        }
    });

    function trainer1(name) {
        if (!trainList.innerHTML.includes(name)) {
            trainList.innerHTML += "<li>" + name + "</li>";
            updateTrainersInput();
            testList.textContent = "g";
        }
        groups.selectedIndex = -1;
        individual.selectedIndex = -1;
    }

    function trainer2(name) {
        if (!trainList.innerHTML.includes(name)) {
            trainList.innerHTML += "<li>" + name + "</li>";
            updateTrainersInput();
        }
        individual.selectedIndex = -1;
        groups.selectedIndex = -1;
    }

    function updateTrainersInput() {
        var trainers = Array.from(trainList.getElementsByTagName("li")).map(function (item) {
            return item.textContent;
        });
        trainersInput.value = trainers.join(", ");
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
