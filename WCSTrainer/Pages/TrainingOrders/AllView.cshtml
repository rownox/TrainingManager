@page
@model WCSTrainer.Pages.TrainingOrders.AllViewModel
@{
    ViewData["Title"] = "AllView";
}

@using WCSTrainer.Components

<div class="panel">
    <div class="body">
        <component type="typeof(Sidebar)" render-mode="WebAssemblyPrerendered" />
        <div class="properties">
            <div class="order-list2">
                <div class="sorters">
                    <div class="btns">
                        <button onclick="sortTable(4)" class="btn bg-btn btnWhite">Begin Date</button>
                        <button onclick="sortTable(0)" class="btn bg-btn btnWhite">ID Number</button>
                        <button onclick="sortTable(6)" class="btn bg-btn btnWhite">Priority Level</button>
                    </div>
                    <div class="options">
                        <form method="post" id="maxCountForm">
                            <select asp-for="maxCount" class="drop-main" onchange="submitForm()">
                                <option value="15">15</option>
                                <option value="50">50</option>
                                <option value="@Model.TrainingOrder.Count()">Max</option>
                            </select>
                            
                            <div class="selector">
                                <p>From</p>
                                <input type="date" asp-for="TrainingOrder.@Model.From" class="form-control" />
                            </div>
                            <div class="selector">
                                <p>To</p>
                                <input type="date" asp-for="TrainingOrder.@Model.To" class="form-control" />
                            </div>
                            
                        </form>
                    </div>
                </div>
                <table id="dataTable">
                    <tr>
                        <th>Order ID</th>
                        <th>Status</th>
                        <th>Trainee</th>
                        <th>Skill</th>
                        <th>Begin Date</th>
                        <th>End Date</th>
                        <th>Priority Level</th>
                    </tr>
                    @foreach (var item in Model.TrainingOrder.Reverse()) {
                        if (Model.listCount < Model.maxCount) {
                            <tr class="clickable">
                                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                <td>@Html.DisplayFor(modelItem => item.status)</td>
                                @foreach (var emp in Model.Employees) {
                                    if (emp.Id.ToString() == item.trainee) {
                                        <td>@emp.FirstName @emp.LastName</td>
                                    }
                                }
                                <td>@Html.DisplayFor(modelItem => item.skill)</td>
                                <td>@Html.DisplayFor(modelItem => item.beginDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.endDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.priorityLevel)</td>
                            </tr>
                            Model.listCount++;
                        }
                    }
                </table>
            </div>
        </div>
    </div>
</div>

<script>

    var sortOrder = true;

    function sortTable(column) {
        var table = document.getElementById("dataTable");
        var rows = Array.from(table.rows).slice(1);

        rows.sort(function (row1, row2) {
            var x = parseFloat(row1.cells[column].innerText);
            var y = parseFloat(row2.cells[column].innerText);
            return sortOrder ? x - y : y - x;
        });

        rows.forEach(function (row) {
            table.appendChild(row);
        });

        sortOrder = !sortOrder;
    }

    function submitForm() {
        document.getElementById('maxCountForm').submit();
    }

</script>