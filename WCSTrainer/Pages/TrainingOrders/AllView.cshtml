@page
@model WCSTrainer.Pages.TrainingOrders.AllViewModel
@{
    ViewData["Title"] = "AllView";
}

@using WCSTrainer.Pages.Components

<div class="panel">
    <div class="body">
        <component type="typeof(Sidebar)" render-mode="WebAssemblyPrerendered" />
        <div class="properties">
            <div class="order-list2">
                <div class="sorters">
                    <div class="btns">
                        <button onclick="sortTable(4)" class="btn bg-btn btnWhite">Begin Date</button>
                        <button onclick="sortTable(0)" class="btn bg-btn btnWhite">ID Number</button>
                        <button onclick="sortTable(6)" class="btn bg-btn btnWhite">Priority Level</button>
                    </div>
                    <form method="post" id="maxCountForm">
                        <select asp-for="maxCount" class="drop-main" onchange="submitForm()">
                            <option value="15">15</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                            <option value="@Model.TrainingOrder.Count()">Max</option>
                        </select>
                        <div class="labels">
                            <p class="control-label">From</p>
                            <span asp-validation-for="@Model.From" class="text-danger"></span>
                        </div>
                        <input type="date" asp-for="TrainingOrder.@Model.From" class="form-control" />
                        <div class="labels">
                            <p class="control-label">To</p>
                            <span asp-validation-for="TrainingOrder.@Model.To" class="text-danger"></span>
                        </div>
                        <input type="date" asp-for="TrainingOrder.@Model.To" class="form-control" />
                    </form>
                </div>
                <table id="dataTable">
                    <tr>
                        <th>Order ID</th>
                        <th>Status</th>
                        <th>Trainee</th>
                        <th>Skill</th>
                        <th>Begin Date</th>
                        <th>End Date</th>
                        <th>Priority Level</th>
                    </tr>
                    @foreach (var item in Model.TrainingOrder.Reverse()) {
                        if (Model.listCount < Model.maxCount) {
                            <tr class="clickable">
                                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                <td>@Html.DisplayFor(modelItem => item.status)</td>
                                <td>@Html.DisplayFor(modelItem => item.trainee)</td>
                                <td>@Html.DisplayFor(modelItem => item.skill)</td>
                                <td>@Html.DisplayFor(modelItem => item.beginDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.endDate)</td>
                                <td>@Html.DisplayFor(modelItem => item.priorityLevel)</td>
                            </tr>
                            Model.listCount++;
                        }
                    }
                </table>
            </div>
        </div>
    </div>
</div>

<script>

    function sortTable(column) {
        var table, rows, switching, i, shouldSwitch;
        table = document.getElementById("dataTable");
        switching = true;

        while (switching) {
            switching = false;
            rows = table.rows;

            for (i = 1; i < (rows.length - 1); i++) {

                shouldSwitch = false;
                var x = parseFloat(rows[i].getElementsByTagName("TD")[column].innerHTML.toLowerCase());
                var y = parseFloat(rows[i + 1].getElementsByTagName("TD")[column].innerHTML.toLowerCase());

                if (x > y) {
                    shouldSwitch = true;
                    break;
                }
            }

            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }

    function submitForm() {
        document.getElementById('maxCountForm').submit();
    }

</script>