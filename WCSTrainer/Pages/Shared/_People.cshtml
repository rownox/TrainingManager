@using System.Text.Json
@using System.Text.Json.Serialization
@model List<Employee>

@functions {
   public class Person {
      public int Id { get; set; }
      public string Name { get; set; } = string.Empty;
      public string Department { get; set; } = string.Empty;
      public string JobTitle { get; set; } = string.Empty;
      public string Shift { get; set; }
      public int EmployeeID { get; set; }
   }
}

<div id="people-component" class="people-component hidden">
   <div class="people-container">
      <div class="search">
         <input class="search-box" type="search" id="searchInputPeople" placeholder="Search by Name or Department" oninput="searchEmployees()" />
      </div>
      @{
         var jsonOptions = new JsonSerializerOptions {
            ReferenceHandler = ReferenceHandler.Preserve,
            WriteIndented = false
         };
      }

      @{
         var peopleList = new Dictionary<Person, string>();

         foreach (var item in Model) {
            if (item.Active == true) {
               string departments = string.Join(", ", item.TrainerDepartments.Select(dept => dept.Name));
               var newPerson = new Person {
                  Id = item.Id,
                  EmployeeID = item.EmployeeID,
                  JobTitle = item.JobTitle,
                  Shift = item.Shift == 1 ? "1st Shift" : "2nd Shift",
                  Name = item.FirstName + " " + item.LastName,
                  Department = departments
               };
               var employeeJson = JsonSerializer.Serialize(newPerson, jsonOptions);
               peopleList.Add(newPerson, employeeJson);
            }
         }
      }

      <ul id="traineesList" class="item-container">
         @foreach (var item in peopleList) {
            <li onclick="selectTrainee('@item.Value', this)" class="item" data-name="@item.Key.Name @item.Key.Department">
               <div class="info">
                  <p>@item.Key.Name</p>
               </div>
               <div class="selector">
                  <img src="~/images/add.svg" onclick="addItemToPartial('@item.Key.Id', '@item.Key.Name')" />
               </div>
            </li>
         }
      </ul>
   </div>

   <div class="details">
      <div class="top">
         <div id="info-container" class="info-container">
            <p id="name" class="title"></p>
            <div class="info">
               <p class="one">Employee ID:</p>
               <p id="employeeId" class="two"></p>
            </div>
            <div class="info">
               <p class="one">Job Title:</p>
               <p id="jobtitle" class="two"></p>
            </div>
            <div class="info">
               <p class="one">Shift:</p>
               <p id="shift" class="two"></p>
            </div>
            <div class="info">
               <p class="one">Known Skills:</p>
               <p id="department" class="two"></p>
            </div>
            <div class="btn-container">
               <a class="btn btnWhite bg-btn" onclick="linkToUser()">View User Details</a>
            </div>
         </div>
      </div>
      <div class="bottom">
         <div class="list-container">
            <ul id="peopleTempList" class="list"></ul>
         </div>
         <div class="btn-container">
            <button class="btn btnWhite bg-btn" onclick="confirmPeopleSelection()">Add Selection</button>
         </div>
      </div>
   </div>
</div>
<div class="overlay hidden" onclick="closeComponent()"></div>

<script src="~/js/component.js"></script>

<script>
   var traineesList = document.getElementById("traineesList");
   var trainersList = document.getElementById("trainersList");
   var traineeBtn = document.getElementById("traineeBtn");
   var trainerBtn = document.getElementById("trainerBtn");
   trainersList.style.display = "none";
   traineeBtn.classList.add("selected");

   function linkToUser() {
      window.open('/Employees/Details?id=' + selected.Id, '_blank');
   }

   var selected;

   function selectTrainer(json, element) {
      setSelected(json, element, 'trainersList');
   }

   function selectTrainee(json, element) {
      setSelected(json, element, 'traineesList');
   }

   function setSelected(employeeJson, element, list) {
      var infoContainer = document.getElementById('info-container');
      if (infoContainer.style.display != "flex") {
         infoContainer.style.display = "flex";
      }
      selected = JSON.parse(employeeJson);
      updateSelected();

      highlight(element, list);
   }

   function updateSelected() {
      document.getElementById('name').textContent = selected.Name;
      document.getElementById('department').textContent = selected.Department;
      document.getElementById('employeeId').textContent = selected.EmployeeID;
      document.getElementById('jobtitle').textContent = selected.JobTitle;
      document.getElementById('shift').textContent = selected.Shift;
   }

   function searchEmployees() {
      var input = document.getElementById('searchInputPeople');
      var filter = input.value.toUpperCase();
      var lists = [traineesList, trainersList];

      lists.forEach(function (list) {
         var items = list.getElementsByTagName('li');
         for (var i = 0; i < items.length; i++) {
            var name = items[i].getAttribute('data-name');
            if (name.toUpperCase().indexOf(filter) > -1) {
               items[i].style.display = "";
            } else {
               items[i].style.display = "none";
            }
         }
      });
   }
</script>