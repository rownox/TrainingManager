@using System.Text.Json
@using System.Text.Json.Serialization
@model List<Employee>

<div class="people-container">
   <div class="search">
      <input type="search" placeholder="Search By Name" />
   </div>

   <ul class="item-container">
      @foreach (var item in Model) {
         var jsonOptions = new JsonSerializerOptions {
            ReferenceHandler = ReferenceHandler.Preserve,
            WriteIndented = false
         };
         var employeeJson = JsonSerializer.Serialize(item, jsonOptions);
         <li onclick="setSelected('@employeeJson')" class="item">
            <div class="photo">
               <div class="frame"></div>
            </div>
            <div class="info">
               <p>@item.FirstName @item.LastName</p>
               <div class="sub">
                  <p>Status: </p>
                  <p class="@(item.Status == "Trainer" ? "highlight" : "")">@item.Status</p>
               </div>
            </div>
            <div class="selector">
               <img src="~/images/add.svg" onclick="addItemToPartial('@item.Id', '@item.FirstName', '@item.LastName')" />
            </div>
         </li>
      }
   </ul>
   <p>Selected:</p>
   <div class="list-container">
      <div class="selected-list">
         <ul id="partialTempList"></ul>
      </div>
   </div>

   <button class="btn btnWhite nbg-btn" onclick="confirmSelectionInPartial()">Add Trainer</button>
</div>

<div class="details">
@*    <component type="typeof(Person)" render-mode="WebAssemblyPrerendered" param-EmployeeId="" /> *@
</div>

<script src="~/js/people.js"></script>

<script>
   var selected;
   function setSelected(employeeJson) {
      var infoContainer = document.getElementById('info-container');
      if (infoContainer.style.display != "flex") {
         infoContainer.style.display = "flex";
      }
      selected = JSON.parse(employeeJson);
      updateSelected();
   }

   function updateSelected() {
      document.getElementById('name').textContent = selected.FirstName + " " + selected.LastName;
      document.getElementById('status').textContent = selected.Status;

      var groupList = document.getElementById('group-list');
      groupList.innerHTML = '';
      if (Array.isArray(selected.TrainingOrdersAsTrainer)) {
         selected.Groups.forEach(function (group) {
            var item = document.createElement('p');
            item.classList.add('item');
            item.textContent = group.GroupName;
            groupList.appendChild(item);
         });
      } else {
         console.log("TrainingOrdersAsTrainer is not an array");
      }

      var time = 0;

      var trainingList = document.getElementById('training-list');
      trainingList.innerHTML = '';
      if (Array.isArray(selected.TrainingOrdersAsTrainer)) {
         selected.TrainingOrdersAsTrainer.forEach(function (order) {
            var item = document.createElement('p');
            item.classList.add('item');
            item.textContent = order.TrainingName;
            trainingList.appendChild(item);
            time = time + order.Duration;
         });
      }

      document.getElementById('total-hours').textContent = time;
   }
</script>
