@page
@model WCSTrainer.Pages.Lessons.CreateModel

@using Microsoft.AspNetCore.Identity
@inject SignInManager<UserAccount> SignInManager
@inject UserManager<UserAccount> UserManager
@inject IWebHostEnvironment WebHostEnvironment

<div class="panel">
   <div class="body">
      <partial name="_Sidebar" />
      <div class="properties">
         <div class="user-form">
            <p class="title">Create New Lesson</p>
            <p class="description">Fill out each required field.</p>
            @if (SignInManager.IsSignedIn(User))
            {
               var user = await UserManager.GetUserAsync(User);
               if (user != null)
               {
                  <div class="field-container">
                     <form method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="All" class="text-danger"></div>

                        <div class="form-group">
                           <div class="form">
                              <div class="labels">
                                 <p class="control-label">Name</p>
                                 <span asp-validation-for="Lesson.Name" class="text-danger"></span>
                              </div>
                              <input asp-for="Lesson.Name" class="form-control" />
                           </div>
                           <div class="form">
                              <div class="labels">
                                 <p class="control-label">Lesson Category</p>
                                 <span asp-validation-for="@Model.Lesson.LessonCategoryId" class="text-danger"></span>
                              </div>
                              <select asp-for="@Model.Lesson.LessonCategoryId" class="form-drop2" asp-items="@Model.CategorySelectList"></select>
                           </div>
                        </div>

                        <div class="form-group">
                           <div class="form">
                              <div class="labels">
                                 <p class="control-label">Description Type</p>
                              </div>
                              <select id="descriptionType" class="form-drop2" name="descriptionType">
                                 <option value="Text" selected>Text</option>
                                 <option value="Image">Image</option>
                              </select>
                           </div>

                           <!-- Text Description -->
                           <div class="form">
                              <div class="labels">
                                 <p class="control-label">Text Content</p>
                              </div>
                              <textarea id="textContent" name="Description.Content" rows="5" placeholder="Describe the lesson steps"></textarea>
                           </div>

                           <!-- Image Description -->
                           <div class="form">
                              <div class="labels">
                                 <p class="control-label">Upload Image</p>
                                 <input type="file" id="imageContent" name="Description.ImageFile" accept="image/*" />
                              </div>
                           </div>
                        </div>

                        <div class="form-group">
                           <div class="btn-container">
                              <input type="submit" value="Create" class="btn bg-btn btnGreen" />
                           </div>
                        </div>
                     </form>
                  </div>
               }
               else
               {
                  <p>User invalid.</p>
               }
            }
            else
            {
               <p>Not signed in.</p>
            }
         </div>
      </div>
   </div>
</div>
